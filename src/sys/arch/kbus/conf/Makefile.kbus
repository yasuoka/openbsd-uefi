#	$OpenBSD: Makefile.kbus,v 1.4 2000/01/10 03:49:50 millert Exp $

# Copyright 1990 W. Jolitz
# 	@(#)Makefile.i386	7.1 5/10/91
#
# Makefile for OpenBSD/Kbus
#
#  Edited by Philip A. Nelson
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/kbus/conf/``machineid''
# after which you should do
#	 config machineid
# Generic makefile changes should be made in
#	/sys/arch/kbus/conf/Makefile.kbus
# after which config should be rerun for all machines.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE INVISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas
#

TOUCH=	touch -f -c
HOSTCC= gcc
#HOST=sparc-sun-sunos4-
HOST=
AS=	$(HOST)as
LD=	$(HOST)ld
CC=	$(HOST)gcc 
CPP=	$(HOST)cpp
AWK=	awk

S=	../../../..
KBUS=	../..

.s.o:
	$(CC) -x assembler-with-cpp -traditional-cpp -c ${COPTS} ${KBUS}/kbus/$*.s ${ASFLAGS} -o $*.o

CPPFLAGS= -I. -I$S -I$S/sys -I${KBUS}
INCLUDES=$(CPPFLAGS)
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL
CDIAGFLAGS=	-Wall -Werror -Wno-format -Wstrict-prototypes \
		-Wmissing-prototypes -Wno-main -Wno-uninitialized
		
CFLAGS=	-pipe -O ${COPTS} ${CDIAGFLAGS}
ASFLAGS=

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

NORMAL_S= (${CPP} ${COPTS} ${PROF} $< | ${AS} ${ASFLAGS} -o $*.o)
NORMAL_C= ${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C= ${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
DRIVER_C= ${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C= ${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
SYSTEM_OBJS=locore.o ${OBJS} param.o ioconf.o conf.o ${LIBKERN} \
	${LIBCOMPAT}
SYSTEM_DEP=Makefile ${SYSTEM_OBJS}
SYSTEM_LD_HEAD= 	@echo loading $@; rm -f $@
#SYSTEM_LD= ${LD} -T ${KBUS}/kbus/ldscript -e start -d -o $@ -X ${SYSTEM_OBJS} vers.o
SYSTEM_LD= ${LD} -N -p -Ttext FF060000 -e start -o $@ ${SYSTEM_OBJS} vers.o
#SYSTEM_LD_TAIL= $(HOST)size $@ ; $(HOST)nm -n $@ > SYMMS ; chmod 755 $@; cp $@ /tftpboot
SYSTEM_LD_TAIL= $(HOST)size $@ ; $(HOST)nm -n $@ > SYMMS ; chmod 755 $@

%OBJS

%CFILES

%LOAD

clean::
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h

#lint: /tmp param.c
#	@lint -hbxn -I. -DGENERIC -Dvolatile= ${COPTS} ${PARAM} \
#	  ${I386}/i386/Locore.c ${CFILES} ioconf.c param.c | \
#	    grep -v 'struct/union .* never defined' | \
#	    grep -v 'possible pointer alignment problem'

locore.o: assym.h ${KBUS}/kbus/locore.s 

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# depend on network configuration
af.o uipc_domain.o uipc_proto.o locore.o: Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

# depend on maxusers
assym.s machdep.o: Makefile 

# depends on KDB (cons.o also depends on GENERIC)
trap.o cons.o: Makefile

assym.s: $S/sys/param.h machine/pte.h $S/sys/buf.h \
    $S/sys/vmmeter.h \
    $S/sys/proc.h $S/sys/msgbuf.h machine/vmparam.h

assym.h: genassym
	./genassym >assym.h

genassym: ${KBUS}/kbus/genassym.c
	${HOSTCC} ${INCLUDES} -D_KERNEL ${IDENT} ${PARAM} \
		 ${KBUS}/kbus/genassym.c -o genassym

depend:: .depend
.depend: assym.h param.c
	mkdep ${COPTS} ${CFILES} ioconf.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${KBUS}/kbus/genassym.c

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c $S/sys/param.h $S/sys/buf.h
	${CC} -c ${CFLAGS} ioconf.c

conf.o: $S/sys/param.h $S/sys/systm.h $S/sys/buf.h $S/sys/ioctl.h \
	$S/sys/tty.h $S/sys/conf.h ${KBUS}/kbus/conf.c
	${CC} -c ${CFLAGS} ${KBUS}/kbus/conf.c

param.c: $S/conf/param.c
	-rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c

vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} -c vers.c

# for config.new
newvers:
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} -c vers.c

%RULES

