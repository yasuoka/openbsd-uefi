#	$OpenBSD: RAMDISK,v 1.12 2005/01/13 16:16:45 drahn Exp $

machine	cats	arm

# include "../../../conf/GENERIC"
option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC
option		FFS		# UFS
option		NFSCLIENT	# Network File System client
option		CD9660		# ISO 9660 + Rock Ridge file system
option		MSDOSFS		# MS-DOS file system
option		INET		# IP + ICMP + TCP + UDP
option		INET6		# IPv6 (needs INET)
option		DDB		# kernel debugger
option		EXT2FS		# Second Extended Filesystem
option          FIFO            # FIFOs; RECOMMENDED

options	ARM32
options FOOTBRIDGE_INTR

# estimated number of users

maxusers	32

# CPU options

# For StrongARM systems
options 	CPU_SA110	# Support the SA110 core

# FPA options

#options 	ARMFPE		# ARM Ltd FPE

config                bsd     root on rd0a swap on rd0b

# The main bus device
mainbus0 at root

# The boot cpu
cpu0 at mainbus?

# Core logic
footbridge0	at mainbus?

# footbridge uart
fcom0	at footbridge?

# time-of-day device via footbridge or RTC
todclock0	at todservice?

# PCI bus support
# PCI bus via footbridge
pci0	at footbridge?		# PCI bus

pci*	at ppb?

option          PCIVERBOSE
option          USBVERBOSE

# PCI bridges
ppb*	at pci?			# PCI-PCI bridges
# XXX 'puc's aren't really bridges, but there's no better place for them here
#puc*	at pci?			# PCI "universal" comm. cards

# PCI serial interfaces
#com*	at puc?			# 16x50s on "universal" comm boards
#cy*	at pci?			# Cyclades Cyclom-Y serial boards

# PCI parallel printer interfaces
#lpt*	at puc?			# || ports on "universal" comm boards

# PCI SCSI Controllers and Buses
adv*	at pci?			# AdvanSys 1200[A,B], ULTRA SCSI
scsibus* at adv?
#adw*	at pci?			# AdvanSys 9xxUW SCSI
#scsibus* at adw?
ahc*	at pci?			# Adaptec [23]94x, aic78x0 SCSI controllers
scsibus* at ahc?
#bha*	at pci?			# BusLogic 9xx SCSI
#scsibus* at bha?
iha*	at pci?			# Initio INIC-940/950 SCSI
scsibus* at iha?
#isp*	at pci?			# Qlogic ISP 10x0 SCSI controllers
#scsibus* at isp?
pcscp*	at pci?			# AMD 53c974 PCscsi-PCI SCSI
scsibus* at pcscp?
siop*	at pci?			# NCR 53c8xx SCSI
scsibus* at siop?

# SCSI devices
sd*	at scsibus?		# SCSI disk drives
st*	at scsibus?		# SCSI tape drives
cd*	at scsibus?		# SCSI CD-ROM drives
#ch*	at scsibus?		# SCSI auto-changers
#uk*	at scsibus?		# SCSI unknown device
#ss*	at scsibus?		# SCSI scanner

# PCI IDE Controllers and Devices
# PCI IDE controllers - see pciide(4) for supported hardware.
# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know
# how to set up DMA modes for this chip. This may work, or may cause
# a machine hang with some controllers.
pciide* at pci? flags 0x0000

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
wd*	at pciide? flags 0x0000	# the drives themselves

# ATAPI bus support
atapiscsi* at pciide?
scsibus* at atapiscsi?

# PCI network interfaces
#en*	at pci?			# ENI/Adaptec ATM
#ep*	at pci?			# 3C590 ethernet cards
em*	at pci?			# Intel Pro/1000 ethernet
fxp*	at pci?			# Intel EtherExpress PRO 10+/100B
ne*	at pci?			# NE2000 compat ethernet
#ntwoc*	at pci?			# Riscom/N2 PCI Sync Serial
dc*	at pci?			# DECchip 21x4x and clones
de*	at pci?			# DECchip 21x4x and clones
vr*	at pci?			# VIA Rhine Fast Ethernet
xl*	at pci?			# 3C9xx ethernet
#lmc*	at pci?			# Lan Media Corp SSI/HSSI/DS3

# MII/PHY support
exphy*	at mii?			# 3Com internal PHYs
#icsphy* at mii?		# Integrated Circuit Systems ICS189x
inphy*	at mii?			# Intel 82555 PHYs
#iophy*	at mii?			# Intel 82553 PHYs
#lxtphy*	at mii?		# Level One LXT-970 PHYs
nsphy*	at mii?			# NS83840 PHYs
#nsphyter* at mii?		# NS83843 PHYs
qsphy*	at mii?			# Quality Semiconductor QS6612 PHYs
#sqphy*	at mii?			# Seeq 80220/80221/80223 PHYs
#tlphy*	at mii?			# ThunderLAN PHYs
#tqphy*	at mii?			# TDK Semiconductor PHYs
ukphy*	at mii?			# generic unknown PHYs

# USB Controller and Devices

# PCI USB controllers
ohci*	at pci?				# Open Host Controller

# USB bus support
usb*	at ohci?

# USB Hubs
uhub*	at usb?
uhub*	at uhub?

# USB HID device
uhidev*	at uhub?

# USB Keyboards
ukbd*	at uhidev?
wskbd*	at ukbd? mux 1

# USB Mass Storage
umass*	at uhub?
atapiscsi* at umass?
scsibus* at umass?

# USB Ethernet adapters
aue*	at uhub?		# ADMtek AN986 Pegasus based adapters
cue*	at uhub?		# CATC USB-EL1201A based adapters
kue*	at uhub?		# Kawasaki LSI KL5KUSB101B based adapters

vga*		at pci?
wsdisplay*	at vga?

# ISA bus bridging

pcib*	at pci?			# PCI-ISA bridge
isa*	at pcib?		# ISA bus

# ISA Plug-and-Play bus support
#isapnp0	at isa?

# wscons
pckbc0	at isa?			# pc keyboard controller
pckbd*	at pckbc?		# PC keyboard
wskbd*	at pckbd? mux 1

#pcppi0	at isa?
#sysbeep0	at pcppi?

# ISA Plug-and-Play serial interfaces
#com*	at isapnp?			# Modems and serial boards

# ISA Plug-and-Play network interfaces
#ep*	at isapnp?			# 3Com 3c509 Ethernet

# ISA serial interfaces
com0	at isa? port 0x3f8 irq 4	# Standard PC serial ports
com1	at isa? port 0x2f8 irq 3
#com2	at isa? port 0x3e8 irq 9
#com3	at isa? port 0x2e8 irq 10

# ISA floppy
#fdc0	at isa? port 0x3f0 irq 6 drq 2	# standard PC floppy controllers
#fdc1	at isa? port 0x370
#fd*	at fdc?				# the drives themselves

# ISA network interface
#ne0	at isa? port 0x280 irq 9
#ne1	at isa? port 0x300 irq 10
#ep*	at isa?
lc0 at isa? port 0x200 irq ?
lc1 at isa? port 0x280 irq ?

# The spkr driver provides a simple tone interface to the built in speaker.
#spkr0	at pcppi?			# PC speaker

ds1687rtc0	at isa? port 0x72		# Dallas RTC

# Pseudo-Devices

# mouse & keyboard multiplexor pseudo-devices
pseudo-device	wsmux		2
#pseudo-device	crypto		1
pseudo-device	loop		1	# network loopback
pseudo-device	bpfilter	1	# packet filter
pseudo-device	rd		1	# ram disk

option		BOOT_CONFIG	# boot-time kernel config

# RAMDISK stuff
option		MINIROOTSIZE=8192
option		RAMDISK_HOOKS
