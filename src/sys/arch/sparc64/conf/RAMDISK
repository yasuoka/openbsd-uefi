# 	$OpenBSD: RAMDISK,v 1.33 2004/10/20 23:04:57 miod Exp $

# Machine architecture; required by config(8)
machine		sparc64

option		SUN4U

# maxusers means mostly "let's get small" in terms of kernel malloc's
maxusers	2

option		RAMDISK_HOOKS
option		MINIROOTSIZE=6144

#option		DDB		# need this to see what's happening

option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC

option		SMALL_KERNEL
option		NO_PROPOLICE
option		DIAGNOSTIC	# internal consistency checks
option		FFS		# UFS
option		NFSCLIENT	# Network File System client
option		CD9660		# ISO 9660 + Rock Ridge file system
option		INET		# IP + ICMP + TCP + UDP
option		INET6		# IPv6 (needs INET)
option		BOOT_CONFIG	# add support for boot -c

# Generic swap; second partition of root disk or network.
config		bsd	root on rd0a

# Main bus and CPU .. all systems.
mainbus0 at root
cpu0	at mainbus0

central0 at mainbus0
fhc0	at central0
fhc*	at mainbus0

# Bus types found on SPARC systems.
sbus*	at mainbus0		# Ultra 1/E4500
psycho*	at mainbus0
pci*	at psycho?		# Ultra 5
pci*	at ppb?
ppb*	at pci?
ebus*	at pci?

# PCI Ethernet
hme*	at pci?
gem*	at pci?
#ti*	at pci?			# Alteon Tigon 1Gb ethernet
fxp*	at pci?			# EtherExpress 10/100B ethernet
xl*	at pci?			# 3C9xx ethernet
dc*	at pci?			# 21143, "tulip" clone ethernet
em*	at pci?			# Intel Pro/1000 ethernet
rl*	at pci?			# RealTek 81[23]9 ethernet
vr*	at pci?				# VIA Rhine ethernet

auxio*	at ebus?
auxio*	at sbus?
#com*	at ebus?
clock*	at sbus?			# Mostek clock
clock*	at ebus?
clock0	at fhc?
rtc*	at ebus?			# DS1287/M5819 clock
timer*	at mainbus0			# Timer chip

## PROM console driver -- if all else fails
pcons0	at mainbus0			# PROM console

## Lance Ethernet - AMD7990
le*		at sbus?
ledma*		at sbus?
le*		at ledma?
lebuffer*	at sbus?
le*		at lebuffer?

# Quad-ethernet glue device, and sub-devices
qec*	at sbus?
qe*	at qec?
be*	at qec?
hme*	at sbus?

pciide*	at pci? flags 0x0000
wd*	at pciide? flags 0x0a00
atapiscsi* at pciide?
scsibus* at atapiscsi?

#
# Note the flags on the esp entries below, that work around
# deficiencies in the current driver:
#	bits 0-7:  disable disconnect/reselect for the corresponding target
#	bits 8-15: disable synch negotiation for target [bit-8]
#	Note: targets 4-7 have disconnect/reselect enabled on the premise
#	      that tape devices normally have one of these targets. Tape
#	      devices should be allowed to disconnect for the SCSI bus
#	      to operate acceptably.
#
dma*	at sbus?		# SBus
esp*	at dma? flags 0x0000	# SBus
esp*	at sbus?
isp*	at sbus?
option ISP_COMPILE_1000_FW=1
scsibus* at esp?

siop*	at pci?
isp*	at pci?
option ISP_COMPILE_FW=1
scsibus*	at siop?

scsibus*	at isp?

# These entries find devices on all SCSI busses and assign
# unit numers dynamically.
sd*	at scsibus?		# SCSI disks
cd*	at scsibus?		# SCSI CD-ROMs

# Media Independent Interface (mii) drivers)
exphy*	at mii?			# 3Com internal PHYs
brgphy*	at mii?			# Broadcom PHYs
nsphy*	at mii?			# NS and compatible PHYs
qsphy*	at mii?			# Quality Semi QS6612 PHYs
dcphy*	at mii?			# Digital clone PHYs
amphy*	at mii?			# AMD AM79c873 PHYs
iophy*	at mii?			# Intel 82553 PHYs
inphy*	at mii?			# Intel 82555 PHYs
lxtphy*	at mii?			# Level1 LXT970 PHYs
ukphy*	at mii?			# Unknown PHYs

pseudo-device	rd	2	# ramdisk
pseudo-device	loop	1	# network loopback
pseudo-device	bpfilter 1	# packet filter
