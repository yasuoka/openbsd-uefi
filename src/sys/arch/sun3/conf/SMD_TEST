#	$OpenBSD: SMD_TEST,v 1.12 2000/05/26 00:07:27 miod Exp $
#	$NetBSD: SMD_TEST,v 1.2.4.1 1996/08/19 23:35:11 gwr Exp $

#
# SMD_TEST - for Sun3 (3/50, 3/60, 3/110, 3/160, 3/260)
# Like GENERIC, but includes the SMD disk drivers (xd, xy)
#

include "arch/sun3/conf/std.sun3"

# Machines to be supported by this kernel
option	 	GENERIC
option	 	FPU_EMULATE
option	 	HAVECACHE	# Sun3/260 VAC

# Needs to be set per system.  i.e change these as you see fit
maxusers	4

# Standard system options
option	 	KTRACE		# system call tracing support

# Debugging options.  Uncomment either this:
option	 	DDB
# ... or these two: (for KGDB on another machine)
#makeoptions DEBUG="-g"		# symbols for kgdb + nm
#option 	KGDB

# Filesystem options
option	 	NFSSERVER	# nfs server support
option	 	NFSCLIENT	# nfs client support
option	 	FFS		# ufs file system
#
option	 	CD9660		# ISO 9660 + Rock Ridge file system
option	 	FDESC		# /dev/fd/*
option	 	FIFO		# FIFOs; RECOMMENDED
option	 	KERNFS		# /kern
option	 	NULLFS		# loopback file system
option	 	PROCFS		# /proc
option	 	UNION		# union file system
option	 	MFS		# memory-based filesystem

# Networking options
option	 	INET		# IP prototol stack support
option		IPFILTER	# IP packet filter for security
option		IPFILTER_LOG	# use /dev/ipl to log IPF
#option		GATEWAY		# IP packet forwarding
#option	 	TCP_COMPAT_42	# TCP bug compatibility with 4.2BSD
# XXX - Work-around for root on slow SunOS/Sun3 servers (sigh...)
option	 	NFS_BOOT_RWSIZE=1024

# Compatability options
option	 	COMPAT_SUNOS	# can run SunOS 4.1.1 executables
option	 	COMPAT_43	# and 4.3BSD and ...
option	 	COMPAT_10	# NetBSD 1.0
option	 	COMPAT_11	# NetBSD 1.1
option	 	COMPAT_12	# NetBSD 1.2

# Sun3-specific debugging options
option	 	PMAP_DEBUG
#option 	VMFAULT_TRACE
#option 	SYSCALL_DEBUG
#option 	EXEC_DEBUG
option	 	DIAGNOSTIC
#option 	SCSIDEBUG

config		bsd swap generic

#
# Serial ports
#
zstty0 at zsc1 channel 0	# ttya
zstty1 at zsc1 channel 1	# ttyb

kbd0   at zsc0 channel 0	# keyboard
ms0    at zsc0 channel 1	# mouse

#
# Network devices
#

# Intel Ethernet (onboard, or VME)
ie0 at obio0 addr   0x0C0000 level 3
ie1 at vmes0 addr 0xffe88000 level 3 vect 0x75

# Lance Ethernet (only onboard)
le0 at obio0 addr   0x120000 level 3

#
# Disk and tape devices
#

# Sun3 "si" SCSI controller (NCR 5380)
# This driver has several flags which may be enabled by OR'ing
# the values and using the "flags" directive.  (PR#1929)
# Valid flags are:
#
#  0x01        Use DMA (may be polled)
#  0x02        Use DMA completion interrupts
#  0x04        Allow disconnect/reselect
#
# E.g. "flags 0x07" would enable DMA, interrupts, and reselect.
# Note: these values are quite a bit paranoid...
si0 at obio0 addr   0x140000 level 2
si0 at vmes0 addr 0xff200000 level 2 vect 0x40
si1 at vmes0 addr 0xff204000 level 2 vect 0x41

# Xylogics 7053 controllers
xdc0 at vmel0 addr 0xffffee80 level 2 vect 0x44
xdc1 at vmel0 addr 0xffffee90 level 2 vect 0x45
xd* at xdc? drive ?

# Xylogics 450/451 controllers
xyc0 at vmes0 addr 0xffffee40 level 2 vect 0x48
xyc1 at vmes0 addr 0xffffee48 level 2 vect 0x49
xy* at xyc? drive ?

# Xylogics 472 tape controllers?

#
# Frame buffer devices
#

# The default cgfour address depends on the machine:
# 3/60: obmem 0xFF200000 .. 0xFF9fffff
# 3/110: different? (not tested)
cgfour0 at obmem0 addr ?

# 3/60 P4 accelerated 8-bit color frame buffer
# cgsix0 at obmem0 addr ?

# 3/60 P4 24-bit color frame buffer
# cgeight0 at obmem0 addr ?

# The default bwtwo address depends on the machine:
# 3/50: obmem   0x100000
# else: obmem 0xff000000
bwtwo0 at obmem0 addr ?
# 3/60 P4 color frame buffer overlay plane, or P4 monochrome frame buffer
#bwtwo1 at obmem0 addr 0xff300000
# 3/60 plug-in color frame buffer overlay plane
#bwtwo1 at obmem0 addr 0xff400000

# Sun-3 color board, or CG5 8-bit VME frame buffer.
cgtwo0 at vmes0 addr 0xff400000 level 4 vect 0xA8

# Support for the CG9 24-bit VME frame buffer.
# cgnine0 at vmel0 addr 0x08000000

#
# SCSI infrastructure
#
scsibus* at scsi?

# Sun compatible scsi device mappings
sd0 at scsibus? target 0 lun 0
sd1 at scsibus? target 0 lun 1
sd2 at scsibus? target 1 lun 0
sd3 at scsibus? target 1 lun 1
sd* at scsibus? target ? lun ?

st0 at scsibus? target 4 lun 0
st1 at scsibus? target 5 lun 0
st* at scsibus? target ? lun ?

cd0 at scsibus? target 6 lun 0
cd* at scsibus? target ? lun ?

ch* at scsibus? target ? lun ?
ss* at scsibus? target ? lun ?
uk* at scsibus? target ? lun ?

pseudo-device	loop		1	# network loopback
pseudo-device	bpfilter 	8	# packet filter
pseudo-device	sl		2	# CSLIP
pseudo-device	ppp		2	# PPP
pseudo-device	tun		2	# network tunneling over tty
pseudo-device	enc		4	# encryption device

pseudo-device	pty		64	# pseudo-terminals
#pseudo-device	vnd		4	# paging to files
pseudo-device	ksyms		1	# kernel symbols device

# for IPv6
pseudo-device	gif		4
#pseudo-device	faith		1
